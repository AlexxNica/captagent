capture[pcap] {

	# here we can check source/destination IP/port, message size
	if(msg_check("size", "100")) {

		if(is_rtcp()) {
			if(is_rtcp_exist()) {
				clog("NOTICE", "Process RTCP!!!!!!!!!!");

				#Convert to JSON if needed.
				if(parse_rtcp_to_json()) {

					#Can be defined many profiles in transport_hep.xml
					if(!send_hep("hepsocket")) {
						clog("ERROR", "Error sending HEP!!!!");
					}

					#Duplicate all INVITEs to JSON transport
					if(sip_is_method() && sip_check("method","INVITE")) {
						#Can be defined many profiles in transport_json.xml
						if(!send_json("jsonsocket")) {
							clog("ERROR", "Error sending HEP!!!!");
						}
					}
				} else {
					clog("ERROR", "couldn't parse RTCP to json");
				}
			} else {
				clog("ERROR", "Couldnot find this call");
			}
		} else {
			clog("ERROR", "This is not RTCP");
		}
        }
	drop;
}
