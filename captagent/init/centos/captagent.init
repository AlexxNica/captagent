#!/bin/bash
#
# Startup script for captagent
#
# chkconfig: 345 85 15
# description: captagent - the Open Source Homer Capture Agent
#
# processname: captagent
# pidfile: /var/run/captagent.pid
# config: /usr/local/etc/captagent/captagent.xml
#
### BEGIN INIT INFO
# Provides: captagent
# Required-Start: $local_fs $network
# Short-Description: captagent - the Open Source Homer Capture Agent
# Description: Homer captagent is an Open Source Capture Programm released
# 	under GPLv3, able to handle thousands of call setups per second.
### END INIT INFO

# Source function library.
. /etc/rc.d/init.d/functions

cap=/usr/local/bin/captagent
prog=captagent
RETVAL=0

[ -f /etc/sysconfig/$prog ] && . /etc/sysconfig/$prog

start() {
	echo -n $"Starting $prog: "
	# there is something at end of this output which is needed to
	# report proper [ OK ] status in CentOS scripts
	$cap $OPTIONS && success || failure
	RETVAL=$?
	echo
	[ $RETVAL = 0 ] && touch /var/lock/subsys/$prog
}

stop() {
	echo -n $"Stopping $prog: "
	killproc $cap
	RETVAL=$?
	echo
	[ $RETVAL = 0 ] && rm -f /var/lock/subsys/$prog /var/run/$prog.pid
}

status() {
	RETVAL=0
  if [ -e /var/run/captagent.pid ]; then
             echo "[OK] Captagent is running with PID: `cat /var/run/captagent.pid`"
  else
             echo "[FAILED] /var/run/captagent.pid does not exist"
             RETVAL=1
  fi   
	return $RETVAL
}

[ -z "$CONFIG" ]  && CONFIG=/usr/local/etc/captagent/captagent.xml

OPTIONS="-f $CONFIG"

# See how we were called.
case "$1" in
	start)
		start
		;;
	stop)
		stop
		;;
	status)
		status
		;;
	restart)
		stop
		start
		;;
	condrestart)
		if [ -f /var/run/$prog.pid ] ; then
			stop
			start
		fi
		;;
	*)
		echo $"Usage: $prog {start|stop|restart|condrestart|status|help}"
		exit 1
esac

exit $RETVAL

